/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getStructDecoder,
  getStructEncoder,
  getU128Decoder,
  getU128Encoder,
  getU64Decoder,
  getU64Encoder,
  getU8Decoder,
  getU8Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';
import {
  getPoolFeeParametersDecoder,
  getPoolFeeParametersEncoder,
  type PoolFeeParameters,
  type PoolFeeParametersArgs,
} from '.';

/** Create static config */
export type EvtCreateConfig = {
  poolFees: PoolFeeParameters;
  vaultConfigKey: Address;
  poolCreatorAuthority: Address;
  activationType: number;
  sqrtMinPrice: bigint;
  sqrtMaxPrice: bigint;
  collectFeeMode: number;
  index: bigint;
  config: Address;
};

export type EvtCreateConfigArgs = {
  poolFees: PoolFeeParametersArgs;
  vaultConfigKey: Address;
  poolCreatorAuthority: Address;
  activationType: number;
  sqrtMinPrice: number | bigint;
  sqrtMaxPrice: number | bigint;
  collectFeeMode: number;
  index: number | bigint;
  config: Address;
};

export function getEvtCreateConfigEncoder(): Encoder<EvtCreateConfigArgs> {
  return getStructEncoder([
    ['poolFees', getPoolFeeParametersEncoder()],
    ['vaultConfigKey', getAddressEncoder()],
    ['poolCreatorAuthority', getAddressEncoder()],
    ['activationType', getU8Encoder()],
    ['sqrtMinPrice', getU128Encoder()],
    ['sqrtMaxPrice', getU128Encoder()],
    ['collectFeeMode', getU8Encoder()],
    ['index', getU64Encoder()],
    ['config', getAddressEncoder()],
  ]);
}

export function getEvtCreateConfigDecoder(): Decoder<EvtCreateConfig> {
  return getStructDecoder([
    ['poolFees', getPoolFeeParametersDecoder()],
    ['vaultConfigKey', getAddressDecoder()],
    ['poolCreatorAuthority', getAddressDecoder()],
    ['activationType', getU8Decoder()],
    ['sqrtMinPrice', getU128Decoder()],
    ['sqrtMaxPrice', getU128Decoder()],
    ['collectFeeMode', getU8Decoder()],
    ['index', getU64Decoder()],
    ['config', getAddressDecoder()],
  ]);
}

export function getEvtCreateConfigCodec(): Codec<
  EvtCreateConfigArgs,
  EvtCreateConfig
> {
  return combineCodec(getEvtCreateConfigEncoder(), getEvtCreateConfigDecoder());
}
