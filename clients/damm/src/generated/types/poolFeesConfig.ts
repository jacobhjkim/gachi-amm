/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getArrayDecoder,
  getArrayEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  getU8Decoder,
  getU8Encoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
  type ReadonlyUint8Array,
} from '@solana/kit';
import {
  getBaseFeeConfigDecoder,
  getBaseFeeConfigEncoder,
  getDynamicFeeConfigDecoder,
  getDynamicFeeConfigEncoder,
  type BaseFeeConfig,
  type BaseFeeConfigArgs,
  type DynamicFeeConfig,
  type DynamicFeeConfigArgs,
} from '.';

export type PoolFeesConfig = {
  baseFee: BaseFeeConfig;
  dynamicFee: DynamicFeeConfig;
  protocolFeePercent: number;
  partnerFeePercent: number;
  referralFeePercent: number;
  padding0: ReadonlyUint8Array;
  padding1: Array<bigint>;
};

export type PoolFeesConfigArgs = {
  baseFee: BaseFeeConfigArgs;
  dynamicFee: DynamicFeeConfigArgs;
  protocolFeePercent: number;
  partnerFeePercent: number;
  referralFeePercent: number;
  padding0: ReadonlyUint8Array;
  padding1: Array<number | bigint>;
};

export function getPoolFeesConfigEncoder(): FixedSizeEncoder<PoolFeesConfigArgs> {
  return getStructEncoder([
    ['baseFee', getBaseFeeConfigEncoder()],
    ['dynamicFee', getDynamicFeeConfigEncoder()],
    ['protocolFeePercent', getU8Encoder()],
    ['partnerFeePercent', getU8Encoder()],
    ['referralFeePercent', getU8Encoder()],
    ['padding0', fixEncoderSize(getBytesEncoder(), 5)],
    ['padding1', getArrayEncoder(getU64Encoder(), { size: 5 })],
  ]);
}

export function getPoolFeesConfigDecoder(): FixedSizeDecoder<PoolFeesConfig> {
  return getStructDecoder([
    ['baseFee', getBaseFeeConfigDecoder()],
    ['dynamicFee', getDynamicFeeConfigDecoder()],
    ['protocolFeePercent', getU8Decoder()],
    ['partnerFeePercent', getU8Decoder()],
    ['referralFeePercent', getU8Decoder()],
    ['padding0', fixDecoderSize(getBytesDecoder(), 5)],
    ['padding1', getArrayDecoder(getU64Decoder(), { size: 5 })],
  ]);
}

export function getPoolFeesConfigCodec(): FixedSizeCodec<
  PoolFeesConfigArgs,
  PoolFeesConfig
> {
  return combineCodec(getPoolFeesConfigEncoder(), getPoolFeesConfigDecoder());
}
