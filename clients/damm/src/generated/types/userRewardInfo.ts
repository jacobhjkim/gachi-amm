/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
  type ReadonlyUint8Array,
} from '@solana/kit';

export type UserRewardInfo = {
  /** The latest update reward checkpoint */
  rewardPerTokenCheckpoint: ReadonlyUint8Array;
  /** Current pending rewards */
  rewardPendings: bigint;
  /** Total claimed rewards */
  totalClaimedRewards: bigint;
};

export type UserRewardInfoArgs = {
  /** The latest update reward checkpoint */
  rewardPerTokenCheckpoint: ReadonlyUint8Array;
  /** Current pending rewards */
  rewardPendings: number | bigint;
  /** Total claimed rewards */
  totalClaimedRewards: number | bigint;
};

export function getUserRewardInfoEncoder(): FixedSizeEncoder<UserRewardInfoArgs> {
  return getStructEncoder([
    ['rewardPerTokenCheckpoint', fixEncoderSize(getBytesEncoder(), 32)],
    ['rewardPendings', getU64Encoder()],
    ['totalClaimedRewards', getU64Encoder()],
  ]);
}

export function getUserRewardInfoDecoder(): FixedSizeDecoder<UserRewardInfo> {
  return getStructDecoder([
    ['rewardPerTokenCheckpoint', fixDecoderSize(getBytesDecoder(), 32)],
    ['rewardPendings', getU64Decoder()],
    ['totalClaimedRewards', getU64Decoder()],
  ]);
}

export function getUserRewardInfoCodec(): FixedSizeCodec<
  UserRewardInfoArgs,
  UserRewardInfo
> {
  return combineCodec(getUserRewardInfoEncoder(), getUserRewardInfoDecoder());
}
