/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU16Decoder,
  getU16Encoder,
  getU64Decoder,
  getU64Encoder,
  getU8Decoder,
  getU8Encoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
  type ReadonlyUint8Array,
} from '@solana/kit';

export type BaseFeeConfig = {
  cliffFeeNumerator: bigint;
  feeSchedulerMode: number;
  padding: ReadonlyUint8Array;
  numberOfPeriod: number;
  periodFrequency: bigint;
  reductionFactor: bigint;
};

export type BaseFeeConfigArgs = {
  cliffFeeNumerator: number | bigint;
  feeSchedulerMode: number;
  padding: ReadonlyUint8Array;
  numberOfPeriod: number;
  periodFrequency: number | bigint;
  reductionFactor: number | bigint;
};

export function getBaseFeeConfigEncoder(): FixedSizeEncoder<BaseFeeConfigArgs> {
  return getStructEncoder([
    ['cliffFeeNumerator', getU64Encoder()],
    ['feeSchedulerMode', getU8Encoder()],
    ['padding', fixEncoderSize(getBytesEncoder(), 5)],
    ['numberOfPeriod', getU16Encoder()],
    ['periodFrequency', getU64Encoder()],
    ['reductionFactor', getU64Encoder()],
  ]);
}

export function getBaseFeeConfigDecoder(): FixedSizeDecoder<BaseFeeConfig> {
  return getStructDecoder([
    ['cliffFeeNumerator', getU64Decoder()],
    ['feeSchedulerMode', getU8Decoder()],
    ['padding', fixDecoderSize(getBytesDecoder(), 5)],
    ['numberOfPeriod', getU16Decoder()],
    ['periodFrequency', getU64Decoder()],
    ['reductionFactor', getU64Decoder()],
  ]);
}

export function getBaseFeeConfigCodec(): FixedSizeCodec<
  BaseFeeConfigArgs,
  BaseFeeConfig
> {
  return combineCodec(getBaseFeeConfigEncoder(), getBaseFeeConfigDecoder());
}
