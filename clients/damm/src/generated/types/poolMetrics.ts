/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  getU128Decoder,
  getU128Encoder,
  getU64Decoder,
  getU64Encoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit';

export type PoolMetrics = {
  totalLpAFee: bigint;
  totalLpBFee: bigint;
  totalProtocolAFee: bigint;
  totalProtocolBFee: bigint;
  totalPartnerAFee: bigint;
  totalPartnerBFee: bigint;
  totalPosition: bigint;
  padding: bigint;
};

export type PoolMetricsArgs = {
  totalLpAFee: number | bigint;
  totalLpBFee: number | bigint;
  totalProtocolAFee: number | bigint;
  totalProtocolBFee: number | bigint;
  totalPartnerAFee: number | bigint;
  totalPartnerBFee: number | bigint;
  totalPosition: number | bigint;
  padding: number | bigint;
};

export function getPoolMetricsEncoder(): FixedSizeEncoder<PoolMetricsArgs> {
  return getStructEncoder([
    ['totalLpAFee', getU128Encoder()],
    ['totalLpBFee', getU128Encoder()],
    ['totalProtocolAFee', getU64Encoder()],
    ['totalProtocolBFee', getU64Encoder()],
    ['totalPartnerAFee', getU64Encoder()],
    ['totalPartnerBFee', getU64Encoder()],
    ['totalPosition', getU64Encoder()],
    ['padding', getU64Encoder()],
  ]);
}

export function getPoolMetricsDecoder(): FixedSizeDecoder<PoolMetrics> {
  return getStructDecoder([
    ['totalLpAFee', getU128Decoder()],
    ['totalLpBFee', getU128Decoder()],
    ['totalProtocolAFee', getU64Decoder()],
    ['totalProtocolBFee', getU64Decoder()],
    ['totalPartnerAFee', getU64Decoder()],
    ['totalPartnerBFee', getU64Decoder()],
    ['totalPosition', getU64Decoder()],
    ['padding', getU64Decoder()],
  ]);
}

export function getPoolMetricsCodec(): FixedSizeCodec<
  PoolMetricsArgs,
  PoolMetrics
> {
  return combineCodec(getPoolMetricsEncoder(), getPoolMetricsDecoder());
}
