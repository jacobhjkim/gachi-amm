/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit';

/** Create dynamic config */
export type EvtCreateDynamicConfig = {
  config: Address;
  poolCreatorAuthority: Address;
  index: bigint;
};

export type EvtCreateDynamicConfigArgs = {
  config: Address;
  poolCreatorAuthority: Address;
  index: number | bigint;
};

export function getEvtCreateDynamicConfigEncoder(): FixedSizeEncoder<EvtCreateDynamicConfigArgs> {
  return getStructEncoder([
    ['config', getAddressEncoder()],
    ['poolCreatorAuthority', getAddressEncoder()],
    ['index', getU64Encoder()],
  ]);
}

export function getEvtCreateDynamicConfigDecoder(): FixedSizeDecoder<EvtCreateDynamicConfig> {
  return getStructDecoder([
    ['config', getAddressDecoder()],
    ['poolCreatorAuthority', getAddressDecoder()],
    ['index', getU64Decoder()],
  ]);
}

export function getEvtCreateDynamicConfigCodec(): FixedSizeCodec<
  EvtCreateDynamicConfigArgs,
  EvtCreateDynamicConfig
> {
  return combineCodec(
    getEvtCreateDynamicConfigEncoder(),
    getEvtCreateDynamicConfigDecoder()
  );
}
